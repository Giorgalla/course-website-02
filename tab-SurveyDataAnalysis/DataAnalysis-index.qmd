---
title: "Survey Data Analysis"
---

```{r setup, include=FALSE}
library(ggplot2)
library(forcats) # for data
library(lubridate) # for dates
library(conflicted) # for managing namespace conflicts (functions with the same name)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
library(see)
library(parameters)
library(tibble)
library(dplyr)
library(lubridate)
library(forcats)
library(knitr)
library(kableExtra)
library(reshape2)

```


```{r datatables}
# Create data tables
# Create Codebook
codebook <- tibble(
  variable_name = c("age", "gender", "education", "decision_factor", "decision_fatigue", "overanalysis", "decision_style", "cognitive_bias", "decision_strategies", "decision_confidence"),
  question = c(
    "What is your age?",
    "What is your gender?",
    "What is your education level?",
    "When making a decision, which factor influences you the most?",
    "How often do you experience decision fatigue?",
    "Do you tend to overanalyze decisions before making them?",
    "Which type of decision-making style best describes you?",
    "Have you ever experienced cognitive bias affecting your decisions?",
    "What strategies do you use to improve your decision-making process?",
    "On a scale from 1-5, how confident are you in your decision-making skills?"
  )
)

# Generate a synthetic dataset
set.seed(123)
data <- tibble(
  age = sample(18:65, 100, replace = TRUE),
  gender = sample(c("Male", "Female", "Non-binary", "Prefer not to say"), 100, replace = TRUE),
  education = sample(c("High school or below", "Undergraduate degree", "Graduate degree", "Other"), 100, replace = TRUE),
  decision_factor = sample(c("Logical reasoning", "Emotions and intuition", "Social influences", "Past experiences"), 100, replace = TRUE),
  decision_fatigue = sample(c("Never", "Sometimes", "Often", "Always"), 100, replace = TRUE),
  overanalysis = sample(c("Yes", "No", "Sometimes"), 100, replace = TRUE),
  decision_style = sample(c("Rational", "Intuitive", "Dependent", "Avoidant"), 100, replace = TRUE),
  cognitive_bias = sample(c("Yes", "No", "Unsure"), 100, replace = TRUE),
  decision_strategies = sample(c("Seeking advice", "Analyzing pros and cons", "Taking time", "Relying on past experiences"), 100, replace = TRUE),
  decision_confidence = sample(1:5, 100, replace = TRUE)
)
  
```


# Introduction

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse potenti. Proin lacinia dolor sit amet facilisis mollis. Donec ullamcorper elit non dui hendrerit efficitur.

# Questionnaire

The table below provides a codebook for the survey questionnaire, listing variable names and the corresponding questions:

```{r codebook}
codebook |>
  kable(caption = "Survey Questionnaire Codebook") %>%
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE)
```

# Data Overview

The survey dataset contains responses to questions on demographic and behavioral characteristics. Here is a preview of the first few rows:

```{r data-preview}
data |> 
  head() |> 
  kable(caption = "Survey Data Preview") |> 
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE)
```

# Descriptive Statistics
```{r Encoding-data}
# Encode categorical variables into numeric
encoded_data <- data %>%
  mutate(
    gender_num = as.numeric(factor(gender)),
    education_num = as.numeric(factor(education)),
    decision_factor_num = as.numeric(factor(decision_factor)),
    decision_fatigue_num = as.numeric(factor(decision_fatigue, levels = c("Never", "Sometimes", "Often", "Always"))),
    overanalysis_num = as.numeric(factor(overanalysis)),
    decision_style_num = as.numeric(factor(decision_style)),
    cognitive_bias_num = as.numeric(factor(cognitive_bias)),
    decision_strategies_num = as.numeric(factor(decision_strategies))
  ) %>%
  select(
    age,
    gender_num,
    education_num,
    decision_factor_num,
    decision_fatigue_num,
    overanalysis_num,
    decision_style_num,
    cognitive_bias_num,
    decision_strategies_num,
    decision_confidence
  )
  
```

## Age Distribution

```{r age-plot}
# Age distribution
age_plot <- ggplot(data, aes(x = age)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black") +
  labs(title = "Age Distribution", x = "Age", y = "Frequency") +
  theme_minimal()

age_plot
```

## Linear regression plot

```{r regression-plot}
# Linear regression plot
regression_plot <- ggplot(data, aes(x = age, y = decision_confidence)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_smooth(method = "lm", color = "red", se = FALSE) +
  labs(
    title = "Linear Regression: Age vs Decision Confidence",
    x = "Age",
    y = "Decision Confidence (1-5)"
  ) +
  theme_minimal()

regression_plot
```
## histogram_age_decision_fatigue

```{r Histogram-plot}
# Histogram of age with decision fatigue as fill
histogram_age_decision_fatigue <- ggplot(data, aes(x = age, fill = decision_fatigue)) +
  geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
  labs(
    title = "Age Distribution by Decision Fatigue",
    x = "Age",
    y = "Frequency",
    fill = "Decision Fatigue"
  ) +
  theme_minimal()

histogram_age_decision_fatigue
```

## box_plot_decision_confidence_gender

```{r Box-plot}
# Box plot for decision confidence by gender
box_plot_decision_confidence_gender <- ggplot(data, aes(x = gender, y = decision_confidence, fill = gender)) +
  geom_boxplot(color = "black") +
  labs(
    title = "Decision Confidence by Gender",
    x = "Gender",
    y = "Decision Confidence"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")

box_plot_decision_confidence_gender
```

## Correlation plot

```{r everything-corellation-plot}
# Compute the correlation matrix
correlation_matrix <- cor(encoded_data, use = "complete.obs", method = "pearson")

# Reshape the correlation matrix for plotting
correlation_long <- reshape2::melt(correlation_matrix)

# Plot the heatmap
full_correlation_heatmap <- ggplot(correlation_long, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "darkblue", high = "lightblue", mid = "white", midpoint = 0, limit = c(-1, 1)) +
  labs(
    title = "Full Correlation Heatmap",
    x = "Variables",
    y = "Variables",
    fill = "Correlation"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

full_correlation_heatmap

```

 